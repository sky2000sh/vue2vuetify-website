{"ast":null,"code":"import Vue from 'vue'; // Directives\n\nimport Ripple from '../../directives/ripple'; // Utilities\n\nimport { getObjectValueByPath } from '../../util/helpers';\nexport default Vue.extend({\n  name: 'routable',\n  directives: {\n    Ripple\n  },\n  props: {\n    activeClass: String,\n    append: Boolean,\n    disabled: Boolean,\n    exact: {\n      type: Boolean,\n      default: undefined\n    },\n    exactPath: Boolean,\n    exactActiveClass: String,\n    link: Boolean,\n    href: [String, Object],\n    to: [String, Object],\n    nuxt: Boolean,\n    replace: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: null\n    },\n    tag: String,\n    target: String\n  },\n  data: () => ({\n    isActive: false,\n    proxyClass: ''\n  }),\n  computed: {\n    classes() {\n      const classes = {};\n      if (this.to) return classes;\n      if (this.activeClass) classes[this.activeClass] = this.isActive;\n      if (this.proxyClass) classes[this.proxyClass] = this.isActive;\n      return classes;\n    },\n\n    computedRipple() {\n      var _this$ripple;\n\n      return (_this$ripple = this.ripple) != null ? _this$ripple : !this.disabled && this.isClickable;\n    },\n\n    isClickable() {\n      if (this.disabled) return false;\n      return Boolean(this.isLink || this.$listeners.click || this.$listeners['!click'] || this.$attrs.tabindex);\n    },\n\n    isLink() {\n      return this.to || this.href || this.link;\n    },\n\n    styles: () => ({})\n  },\n  watch: {\n    $route: 'onRouteChange'\n  },\n\n  mounted() {\n    this.onRouteChange();\n  },\n\n  methods: {\n    generateRouteLink() {\n      let exact = this.exact;\n      let tag;\n      const data = {\n        attrs: {\n          tabindex: 'tabindex' in this.$attrs ? this.$attrs.tabindex : undefined\n        },\n        class: this.classes,\n        style: this.styles,\n        props: {},\n        directives: [{\n          name: 'ripple',\n          value: this.computedRipple\n        }],\n        [this.to ? 'nativeOn' : 'on']: { ...this.$listeners,\n          ...('click' in this ? {\n            click: this.click\n          } : undefined)\n        },\n        ref: 'link'\n      };\n\n      if (typeof this.exact === 'undefined') {\n        exact = this.to === '/' || this.to === Object(this.to) && this.to.path === '/';\n      }\n\n      if (this.to) {\n        // Add a special activeClass hook\n        // for component level styles\n        let activeClass = this.activeClass;\n        let exactActiveClass = this.exactActiveClass || activeClass;\n\n        if (this.proxyClass) {\n          activeClass = `${activeClass} ${this.proxyClass}`.trim();\n          exactActiveClass = `${exactActiveClass} ${this.proxyClass}`.trim();\n        }\n\n        tag = this.nuxt ? 'nuxt-link' : 'router-link';\n        Object.assign(data.props, {\n          to: this.to,\n          exact,\n          exactPath: this.exactPath,\n          activeClass,\n          exactActiveClass,\n          append: this.append,\n          replace: this.replace\n        });\n      } else {\n        tag = this.href && 'a' || this.tag || 'div';\n        if (tag === 'a' && this.href) data.attrs.href = this.href;\n      }\n\n      if (this.target) data.attrs.target = this.target;\n      return {\n        tag,\n        data\n      };\n    },\n\n    onRouteChange() {\n      if (!this.to || !this.$refs.link || !this.$route) return;\n      const activeClass = `${this.activeClass || ''} ${this.proxyClass || ''}`.trim();\n      const exactActiveClass = `${this.exactActiveClass || ''} ${this.proxyClass || ''}`.trim() || activeClass;\n      const path = '_vnode.data.class.' + (this.exact ? exactActiveClass : activeClass);\n      this.$nextTick(() => {\n        /* istanbul ignore else */\n        if (!getObjectValueByPath(this.$refs.link, path) === this.isActive) {\n          this.toggle();\n        }\n      });\n    },\n\n    toggle() {\n      this.isActive = !this.isActive;\n    }\n\n  }\n});","map":{"version":3,"mappings":"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","names":["Vue","Ripple","getObjectValueByPath","extend","name","directives","props","activeClass","String","append","Boolean","disabled","exact","type","default","undefined","exactPath","exactActiveClass","link","href","Object","to","nuxt","replace","ripple","tag","target","data","isActive","proxyClass","computed","classes","computedRipple","isClickable","isLink","$listeners","click","$attrs","tabindex","styles","watch","$route","mounted","onRouteChange","methods","generateRouteLink","attrs","class","style","value","ref","path","trim","assign","$refs","$nextTick","toggle"],"sourceRoot":"","sources":["../../../src/mixins/routable/index.ts"],"sourcesContent":["import Vue, { VNodeData, PropType } from 'vue'\n\n// Directives\nimport Ripple, { RippleOptions } from '../../directives/ripple'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'routable',\n\n  directives: {\n    Ripple,\n  },\n\n  props: {\n    activeClass: String,\n    append: Boolean,\n    disabled: Boolean,\n    exact: {\n      type: Boolean as PropType<boolean | undefined>,\n      default: undefined,\n    },\n    exactPath: Boolean,\n    exactActiveClass: String,\n    link: Boolean,\n    href: [String, Object],\n    to: [String, Object],\n    nuxt: Boolean,\n    replace: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: null,\n    },\n    tag: String,\n    target: String,\n  },\n\n  data: () => ({\n    isActive: false,\n    proxyClass: '',\n  }),\n\n  computed: {\n    classes (): object {\n      const classes: Record<string, boolean> = {}\n\n      if (this.to) return classes\n\n      if (this.activeClass) classes[this.activeClass] = this.isActive\n      if (this.proxyClass) classes[this.proxyClass] = this.isActive\n\n      return classes\n    },\n    computedRipple (): RippleOptions | boolean {\n      return this.ripple ?? (!this.disabled && this.isClickable)\n    },\n    isClickable (): boolean {\n      if (this.disabled) return false\n\n      return Boolean(\n        this.isLink ||\n        this.$listeners.click ||\n        this.$listeners['!click'] ||\n        this.$attrs.tabindex\n      )\n    },\n    isLink (): boolean {\n      return this.to || this.href || this.link\n    },\n    styles: () => ({}),\n  },\n\n  watch: {\n    $route: 'onRouteChange',\n  },\n\n  mounted () {\n    this.onRouteChange()\n  },\n\n  methods: {\n    generateRouteLink () {\n      let exact = this.exact\n      let tag\n\n      const data: VNodeData = {\n        attrs: {\n          tabindex: 'tabindex' in this.$attrs ? this.$attrs.tabindex : undefined,\n        },\n        class: this.classes,\n        style: this.styles,\n        props: {},\n        directives: [{\n          name: 'ripple',\n          value: this.computedRipple,\n        }],\n        [this.to ? 'nativeOn' : 'on']: {\n          ...this.$listeners,\n          ...('click' in this ? { click: (this as any).click } : undefined), // #14447\n        },\n        ref: 'link',\n      }\n\n      if (typeof this.exact === 'undefined') {\n        exact = this.to === '/' ||\n          (this.to === Object(this.to) && this.to.path === '/')\n      }\n\n      if (this.to) {\n        // Add a special activeClass hook\n        // for component level styles\n        let activeClass = this.activeClass\n        let exactActiveClass = this.exactActiveClass || activeClass\n\n        if (this.proxyClass) {\n          activeClass = `${activeClass} ${this.proxyClass}`.trim()\n          exactActiveClass = `${exactActiveClass} ${this.proxyClass}`.trim()\n        }\n\n        tag = this.nuxt ? 'nuxt-link' : 'router-link'\n        Object.assign(data.props, {\n          to: this.to,\n          exact,\n          exactPath: this.exactPath,\n          activeClass,\n          exactActiveClass,\n          append: this.append,\n          replace: this.replace,\n        })\n      } else {\n        tag = (this.href && 'a') || this.tag || 'div'\n\n        if (tag === 'a' && this.href) data.attrs!.href = this.href\n      }\n\n      if (this.target) data.attrs!.target = this.target\n\n      return { tag, data }\n    },\n    onRouteChange () {\n      if (!this.to || !this.$refs.link || !this.$route) return\n      const activeClass = `${this.activeClass || ''} ${this.proxyClass || ''}`.trim()\n      const exactActiveClass = `${this.exactActiveClass || ''} ${this.proxyClass || ''}`.trim() || activeClass\n\n      const path = '_vnode.data.class.' + (this.exact ? exactActiveClass : activeClass)\n\n      this.$nextTick(() => {\n        /* istanbul ignore else */\n        if (!getObjectValueByPath(this.$refs.link, path) === this.isActive) {\n          this.toggle()\n        }\n      })\n    },\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}